import MainLayout from '../../components/MainLayout';
import Head from 'next/head';
import Card from '../../components/Card';
import { Spinner } from '../../components/Spinner';
import { db } from '../../context/firebaseContext';
import { collection, getDocs } from 'firebase/firestore/lite';
import { useGoodsContext } from '../../context/contextGoods';
import useSWR from 'swr';
import Image from 'next/image';
import Link from 'next/link';
import { useRouter } from 'next/router';
import Accordion from '../../components/Accordion';
function Kostums({ goodList }) {
  const goodClient = JSON.parse(goodList);
  const { state, dispatch } = useGoodsContext();
  const router = useRouter();
  const getGoods = async () => {
    dispatch({ type: 'ADD KOSTUMS', payload: [...goodClient] });
  };
  const { data, isValidating } = useSWR('shorts', getGoods, {
    fallbackData: goodClient,
  });

  const add = ({ id, title, description, price, urlArr, color }) => {
    dispatch({
      type: 'ADD TO CARD',
      payload: {
        id,
        title,
        price,
        urlArr,
        color,
        sum: price,
        cnt: 1,
        active: 'active',
      },
    });

    const copyGood = state.kostum.slice();
    copyGood.map((item) => {
      if (item.id === id) {
        item.active = 'active';
      }
    });
    dispatch({ type: 'ADD KOSTUMS', payload: [...copyGood] });
  };

  const filterGoods = (e) => {
    const copyGood = state.pants.slice();
    const text = e.target.textContent.toLowerCase();

    const filterGoods = copyGood.filter((item) => {
      if (item.title.toLowerCase().indexOf(text) !== -1) {
        return item;
      }
    });

    if (filterGoods.length === 0) {
      filterGoods = goodClient.filter((item) => {
        if (item.title.toLowerCase().indexOf(text) !== -1) {
          return item;
        }
      });
    }
    if (text === 'зняти фiльтр') {
      dispatch({ type: 'ADD KOSTUMS', payload: [...goodClient] });
    } else {
      dispatch({ type: 'ADD KOSTUMS', payload: [...filterGoods] });
    }
  };

  const handlerFilterGoods = (e) => {
    const value = e.target.value;

    if (value === 'priceLow') {
      const copyGood = state.kostum.slice();
      let sortGood = copyGood.sort((a, b) => {
        return a.price - b.price;
      });
      dispatch({ type: 'ADD KOSTUMS', payload: [...sortGood] });
    }
    if (value === 'priceHigh') {
      const copyGood = state.kostum.slice();
      let sortGood = copyGood.sort((a, b) => {
        return b.price - a.price;
      });
      dispatch({ type: 'ADD KOSTUMS', payload: [...sortGood] });
    }
    if (value === 'dataNew') {
      const copyGood = state.kostum.slice();
      let sortGood = copyGood.sort((a, b) => {
        return b.time.seconds - a.time.seconds;
      });
      dispatch({ type: 'ADD KOSTUMS', payload: [...sortGood] });
    }
    if (value === 'dataOld') {
      const copyGood = state.kostum.slice();
      let sortGood = copyGood.sort((a, b) => {
        return a.time.seconds - b.time.seconds;
      });
      dispatch({ type: 'ADD KOSTUMS', payload: [...sortGood] });
    }
  };
  return (
    <MainLayout>
      <Head>
        {' '}
        <title>спортивнi костюми</title>
        <meta name="description" content="Generated by create next app" />
      </Head>

      {isValidating ? (
        <>
          <Spinner></Spinner>
          {state.kostum.map((obj, i) => {
            return (
              <div className="productCard_block-katalog" key={i}>
                <div>
                  <Image
                    alt={'pant'}
                    width={300}
                    height={400}
                    src={
                      'https://firebasestorage.googleapis.com/v0/b/b-sportwear-shop.appspot.com/o/no_image.png?alt=media&token=47b4ea63-cf4a-4b67-9fa7-8e8004f97505'
                    }></Image>
                  <div className="bottom-subtitle">
                    <button className="button button-default-white">...</button>
                  </div>
                </div>
              </div>
            );
          })}
        </>
      ) : (
        <>
          <h2 className="title-product-block">спортивнi костюми</h2>
          <div className="toolbar toolbar-products">
            <div className="toolbar-sorter sorter">
              <label className="sorter-label" forhtml="sorter">
                сортувати
              </label>{' '}
              <select
                id="sorter"
                data-role="sorter"
                onChange={handlerFilterGoods}
                className="sorter-options">
                <option value="position" defaultValue="">
                  не сортовано
                </option>
                <option value="nameHight">имя а-я</option>
                <option value="nameLow">имя я-а</option>
                <option value="priceHigh">цена више </option>
                <option value="priceLow">цена ниже </option>
                <option value="dataNew">по датi новi</option>
                <option value="dataOld">по датi стaрi</option>
              </select>
            </div>
          </div>

          <div className="section-filter-products">
            <div className="section-left">
              <div className="category">
                <h3 className="sorter-label">категорii</h3>
                <div className="accordion-block">
                  <Accordion title={'спортивні костюми'} cls={'link'}>
                    <li className={router.pathname == '/sport-kostums' ? 'active' : ''}>
                      <Link href="/sport-kostums" shallow>
                        <a>костюми</a>
                      </Link>
                    </li>
                    <li className={router.pathname == '/sport-kostums' ? 'active' : ''}>
                      <Link href="/sport-kostums" shallow>
                        <a>теплі костюми</a>
                      </Link>
                    </li>
                  </Accordion>
                </div>
                <div className="accordion-block">
                  <Accordion title={'спортивні штани'} cls={'link'}>
                    <li className={router.pathname == '/pants' ? 'active' : ''}>
                      <Link href="/pants" shallow>
                        <a>штани</a>
                      </Link>
                    </li>
                    <li className={router.pathname == '/pants' ? 'active' : ''}>
                      <Link href="/pants" shallow>
                        <a>теплі штани</a>
                      </Link>
                    </li>
                  </Accordion>
                </div>
                <div className="accordion-block">
                  <Accordion title={'худі'} cls={'link'}>
                    <li className={router.pathname == '/hoodie' ? 'active' : ''}>
                      <Link href="/hoodie" shallow>
                        <a>худі</a>
                      </Link>
                    </li>
                    <li className={router.pathname == '/hoodie' ? 'active' : ''}>
                      <Link href="/hoodie" shallow>
                        <a>теплі худі</a>
                      </Link>
                    </li>
                  </Accordion>
                </div>
                <li className={router.pathname == '/sweatshirt' ? 'active' : ''}>
                  <Link href="/sweatshirt" shallow>
                    <a>світшоти</a>
                  </Link>
                </li>
                <li className={router.pathname == '/shorts' ? 'active' : ''}>
                  <Link href="/shorts" shallow>
                    <a>шорти</a>
                  </Link>
                </li>
                <li className={router.pathname == '/t-shirt' ? 'active' : ''}>
                  <Link href="/t-shirt" shallow>
                    <a>футболки</a>
                  </Link>
                </li>
              </div>
              <div className="filter">
                <h3 className="sorter-label">фiльтри</h3>
                <p className="accordion-item" onClick={filterGoods}>
                  манжет
                </p>
                <p className="accordion-item" onClick={filterGoods}>
                  прямi
                </p>
                <p className="accordion-item" onClick={filterGoods}>
                  батал
                </p>
                <p className="accordion-item" onClick={filterGoods}>
                  зняти фiльтр
                </p>
              </div>
              {/* <Accordion title={'фiльтр'} cnt={state.pants.length}>
              <p className="accordion-item" onClick={filterGoods}>
                манжет
              </p>
              <p className="accordion-item" onClick={filterGoods}>
                прямi
              </p>
              <p className="accordion-item" onClick={filterGoods}>
                батал
              </p>
              <p className="accordion-item" onClick={filterGoods}>
                зняти фiльтр
              </p>
            </Accordion> */}
            </div>

            <div className="section-right">
              {state.kostum.map((good) => {
                return (
                  <Card
                    add={add}
                    active={good.active}
                    description={good.description}
                    id={good.id}
                    key={good.id}
                    title={good.title}
                    price={good.price}
                    urlArr={good.urlArr}></Card>
                );
              })}
            </div>
          </div>
        </>
      )}
    </MainLayout>
  );
}
export async function getStaticProps() {
  const docRef = collection(db, 'sport-kostums');
  const querySnapshot = await getDocs(docRef);
  const goodList = querySnapshot.docs.map((doc) => doc.data());

  return {
    props: { goodList: JSON.stringify(goodList) || null },
  };
}

export default Kostums;
