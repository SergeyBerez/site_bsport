import MainLayout from '../../components/MainLayout';
import Head from 'next/head';
import Card from '../../components/Card';
import Image from 'next/image';
import { Spinner } from '../../components/Spinner';
import { db } from '../../context/firebaseContext';
import { collection, getDocs } from 'firebase/firestore/lite';
import { useGoodsContext } from '../../context/contextGoods';
import Accordion from '../../components/Accordion';
import Link from 'next/link';
import { useRouter } from 'next/router';
import { useEffect, useState } from 'react';
import useSWR from 'swr';
import Toolbar from '../../components/Toolbar';
export default function Pants({ goodList }) {
  const goodClient = JSON.parse(goodList);

  const { state, dispatch } = useGoodsContext();
  const label = [{ value: 'манжет' }, { value: 'прямi' }, { value: 'батал' }];
  const [checkedState, setCheckedState] = useState(new Array(3).fill(false));

  const router = useRouter();
  useEffect((params) => {
    if (state.pants.length === 0) {
      dispatch({ type: 'ADD PANTS', payload: [...goodClient] });
    }
  }, []);
  const getGoods = async () => {
    //dispatch({ type: "ADD PANTS", payload: [...goodClient] });
  };
  const { data, isValidating } = useSWR('pants', getGoods, {
    fallbackData: goodClient,
  });

  const add = ({ id, title, price, urlArr, color, active }) => {
    console.log(active);
    const copyGood = state.pants.slice();
    copyGood.map((item) => {
      if (item.id === id) {
        item.active = 'active';
      }
    });

    dispatch({ type: 'ADD PANTS', payload: [...copyGood] });

    dispatch({
      type: 'ADD TO CARD',
      payload: {
        id,
        title,
        price,
        urlArr,
        color,
        sum: price,
        cnt: 5,
        active: 'active',
      },
    });
  };
  const filterGoods = (e) => {
    const copyGood = state.pants.slice();
    const text = e.target.textContent.toLowerCase();

    if (text === 'зняти фiльтр') {
      setCheckedState(new Array(3).fill(false));
      dispatch({ type: 'ADD PANTS', payload: [...goodClient] });
    }
  };
  const handleOnChange = (e, position) => {
    const updatedCheckedState = checkedState.map((item, index) =>
      index === position ? !item : item,
    );
    setCheckedState(updatedCheckedState);
    const copyGood = state.pants.slice();
    const inputValue = e.target.value.toLowerCase();

    const filterGoods = copyGood.filter((item) => {
      if (item.title.toLowerCase().indexOf(inputValue) !== -1) {
        return item;
      }
    });

    if (filterGoods.length === 0) {
      filterGoods = goodClient.filter((item) => {
        if (item.title.toLowerCase().indexOf(inputValue) !== -1) {
          return item;
        }
      });
      filterGoods.push(...copyGood);
    }
    if (inputValue === 'манжет') {
    }
    if (e.target.checked) {
      dispatch({ type: 'ADD PANTS', payload: [...filterGoods] });
    } else {
      setCheckedState(new Array(3).fill(false));

      dispatch({ type: 'ADD PANTS', payload: [...goodClient] });
    }

    // if (inputValue === 'зняти фiльтр') {
    //   dispatch({ type: 'ADD PANTS', payload: [...goodClient] });
    // }
  };
  return (
    <MainLayout>
      <Head>
        {' '}
        <title>штаны</title>
        <meta name="description" content="Generated by create next app" />
      </Head>

      {isValidating ? (
        <>
          <Spinner></Spinner>
          {state.pants.map((good) => {
            return (
              <div key={good.id} className="productCard_block">
                <Image
                  src={
                    'https://firebasestorage.googleapis.com/v0/b/b-sportwear-shop.appspot.com/o/no_image.png?alt=media&token=47b4ea63-cf4a-4b67-9fa7-8e8004f97505'
                  }
                  width={300}
                  height={300}
                  alt="product"></Image>

                <div className="product-card__title">...</div>
                <span className="block_price">...</span>
              </div>
            );
          })}
        </>
      ) : (
        <>
          <h1 className="title-product-block">штаны</h1>
          <div className="toolbar toolbar-products">
            <h3 className="title-category">категорii</h3>
            <Toolbar state={state.pants} type={'ADD PANTS'}></Toolbar>
          </div>
          <div className="section-filter-products">
            <div className="section-left">
              <div className="category-catalog">
                <div className="accordion-block">
                  <Accordion title={'спортивні костюми'} cls={'page-filter-bold'}>
                    <li className={router.pathname == '/sport-kostums link' ? 'active' : 'link'}>
                      <Link href="/sport-kostums" shallow>
                        <a>костюми</a>
                      </Link>
                    </li>
                    <li className={router.pathname == '/sport-kostums link' ? 'active' : 'link'}>
                      <Link href="/sport-kostums" shallow>
                        <a>теплі костюми</a>
                      </Link>
                    </li>
                  </Accordion>
                </div>
                <div className="accordion-block">
                  <Accordion title={'спортивні штани'} cls={'page-filter-bold'}>
                    <li className={router.pathname == '/pants' ? 'active link' : 'link'}>
                      <Link href="/pants" shallow>
                        <a>штани</a>
                      </Link>
                    </li>
                    <li className={router.pathname == '/pants' ? 'active link' : 'link'}>
                      <Link href="/pants" shallow>
                        <a>теплі штани</a>
                      </Link>
                    </li>
                  </Accordion>
                </div>
                <div className="accordion-block">
                  <Accordion title={'худі'} cls={'page-filter-bold'}>
                    <li className={router.pathname == '/hoodie' ? 'active link' : 'link'}>
                      <Link href="/hoodie" shallow>
                        <a>худі</a>
                      </Link>
                    </li>
                    <li className={router.pathname == '/hoodie' ? 'active link' : 'link'}>
                      <Link href="/hoodie" shallow>
                        <a>теплі худі</a>
                      </Link>
                    </li>
                  </Accordion>
                </div>
                <li className={router.pathname == '/sweatshirt' ? 'active link' : 'link'}>
                  <Link href="/sweatshirt" shallow>
                    <a>світшоти</a>
                  </Link>
                </li>
                <li className={router.pathname == '/shorts' ? 'active link' : 'link'}>
                  <Link href="/shorts" shallow>
                    <a>шорти</a>
                  </Link>
                </li>
                <li className={router.pathname == '/t-shirt' ? 'active link' : 'link'}>
                  <Link href="/t-shirt" shallow>
                    <a>футболки</a>
                  </Link>
                </li>
              </div>
              <div className="filter">
                <h3 className="sorter-label">фiльтри</h3>
                {label.map((item, i) => {
                  return (
                    <div key={i}>
                      <label>
                        &nbsp;
                        <input
                          type="checkbox"
                          onChange={(e) => handleOnChange(e, i)}
                          checked={checkedState[i]}
                          value={item.value}
                        />{' '}
                        {item.value}
                      </label>
                    </div>
                  );
                })}

                <p className="accordion-item" onClick={filterGoods}>
                  зняти фiльтр
                </p>
              </div>
              <div className="accordion-filter-mobile">
                <Accordion title={'фiльтр'} cls={'page-filter-bold'} cnt={state.pants.length}>
                  {label.map((item, i) => {
                    return (
                      <div key={i}>
                        <label>
                          &nbsp;
                          <input
                            type="checkbox"
                            onChange={(e) => handleOnChange(e, i)}
                            checked={checkedState[i]}
                            value={item.value}
                          />{' '}
                          {item.value}
                        </label>
                      </div>
                    );
                  })}

                  <p className="accordion-item" onClick={filterGoods}>
                    зняти фiльтр
                  </p>
                </Accordion>
              </div>

              <div className="cnt-goods">{state.pants.length}&nbsp;Результатiв</div>
            </div>
            <div className="section-right">
              {state.pants.map((good) => {
                return (
                  <Card
                    add={add}
                    active={good.active}
                    id={good.id}
                    key={good.id}
                    title={good.title}
                    price={good.price}
                    urlArr={good.urlArr}
                    color={good.color}
                    description={good.description}
                    show={good.show}></Card>
                );
              })}
            </div>
          </div>
        </>
      )}

      <style jsx>{`
        .sorter-label {
          display: flex;
          flex-direction: column;
        }
        .link {
          margin-top: 10px;
        }
        .link-single {
          letter-spacing: 1.4px;

          padding: 10px 0;
        }
        .cnt-goods {
          margin: 0 10px;
          font-size: 1.2rem;
          color: #6f6f6f;
        }
        .accordion-item {
          cursor: pointer;
        }
        .toolbar-products {
          // display: flex;
          // align-items: center;
          // justify-content: space-between;
        }
        .block_price {
          width: 100%;
          background-color: #c7c7c7;
          color: #c7c7c7;
        }

        .productCard_block {
          display: flex;
          flex-direction: column;
          margin: 10px;
          padding: 5px;
          max-width: 230px;
        }

        .product-card__title {
          background-color: #c7c7c7;
          color: #c7c7c7;
          margin: 5px 0;
        }

        @media (min-width: 320px) {
          .productCard_block {
            margin: 5px;
            flex-grow: 0;
            flex-basis: calc(100% / 2 - 10px);
            min-width: 140px;
          }
        }
        @media (min-width: 480px) {
          .productCard_block {
            margin: 5px;
            flex-grow: 0;
            flex-basis: calc(100% / 3 - 10px);
          }
        }

        @media (min-width: 680px) {
          .productCard_block {
            flex-grow: 0;
            flex-basis: calc(100% / 4 - 10px);
            min-width: 150px;
          }
        }

        @media (min-width: 1140px) {
          .productCard_block {
            flex-grow: 0;
            flex-basis: calc(100% / 5 - 10px);
            min-width: 200px;
          }
        }
      `}</style>
    </MainLayout>
  );
}

export async function getStaticProps(context) {
  const docRef = collection(db, 'pants');
  const querySnapshot = await getDocs(docRef);
  const goodList = querySnapshot.docs.map((doc) => doc.data());

  return {
    props: { goodList: JSON.stringify(goodList) || null },
  };
}
